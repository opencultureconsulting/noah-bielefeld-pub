<mods xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.loc.gov/mods/v3" version="3.3" xsi:schemaLocation="http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-3.xsd"><id>2914625</id><setSpec>bi_dissertation</setSpec><setSpec>doc-type:doctoralThesis</setSpec><setSpec>ddc:620</setSpec><setSpec>bi_dissertationFtxt</setSpec><setSpec>open_access</setSpec>

<genre>thesis</genre>

<titleInfo><title>Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen</title></titleInfo>





<name type="personal">
  <namePart type="given">Sebastian</namePart>
  <namePart type="family">Korf</namePart>
  <role><roleTerm type="text">author</roleTerm> </role><identifier type="local">25328167</identifier></name>





<name type="personal">
  
  <namePart type="given">Ulrich</namePart>
  
  
  <namePart type="family">Rückert</namePart>
  
  <role> <roleTerm type="text">supervisor</roleTerm> </role>
</name>

<name type="personal">
  
  <namePart type="given">Christian</namePart>
  
  
  <namePart type="family">Plessl</namePart>
  
  <role> <roleTerm type="text">supervisor</roleTerm> </role>
</name>



<name type="corporate">
  <namePart/>
  <identifier type="local">10036</identifier>
  <role>
    <roleTerm type="text">department</roleTerm>
  </role>
</name>








<abstract lang="eng">Die Anforderungen an mikroelektronische Systeme steigen kontinuierlich. Rekonfigurierbare Architekturen bieten einen Kompromiss zwischen der Leistungsfähigkeit anwendungsspezifischer Schaltungen (ASICs) und der Flexibilität heutiger Prozessoren. Sogenannte im Feld programmierbare Gatter-Arrays (engl. Field-Programmable Gate Arrays, FPGAs) haben sich hierbei in den letzten Jahrzehnten besonders etabliert. Die Konfigurationsart dynamisch partielle Rekonfiguration (DPR) moderner SRAM-basierter FPGAs verdeutlicht die gewonnene System-Flexibilität. DPR wird in verschiedensten Anwendungsgebieten aus unterschiedlichsten Motivationen heraus eingesetzt.&lt;br /&gt;
Die Hauptanwendung der DPR ist die Erstellung eines Systems, welches Veränderungen an der Schaltung auf dem FPGA zur Laufzeit erlaubt. Obwohl viele FPGA-Familien bereits seit zwei Jahrzehnten DPR hardwareseitig ermöglichen, ist die Unterstützung durch die Hersteller-Software und insbesondere die Eigenschaften des daraus resultierenden DPR-Systems verbesserungswürdig. Um das Potenzial der verfügbaren Hardware-Flexibilität ausnutzen zu können, wird in dieser Dissertation ein neuer Entwurfsablauf (INDRA 2.0, INtegrated Design Flow for Reconfigurable Architectures) vorgestellt. Dieser Entwurfsablauf ermöglicht die Erstellung eines flexiblen DPR-Systems mit geringem Speicher-, Verwaltungs- und Wartungsaufwand.&lt;br /&gt;
Für Anwendungen mit Homogenitätsanforderungen wird mit DHHarMa (Design Flow for Homogeneous Hard Macros) ein Entwurfsablauf vorgestellt, der die Transformation eines zunächst inhomogenen Designs in ein homogenes Design ermöglicht. Bei dieser Design-Homogenisierung ergibt sich die Fragestellung nach möglichen Auswirkungen bezüglich des FPGA-Ressourcenbedarfs und der Leistungsfähigkeit durch die einzelnen Homogenisierungsschritte. Die einzelnen DHHarMa-Softwarekomponenten wurden daher detailliert durch verschiedene Bewertungsmaße analysiert. Hierbei konnte festgehalten werden, dass die Homogenisierungsschritte im Mittel einen, teils deutlichen, positiven Einfluss auf den FPGA-Ressourcenbedarf jedoch teils einen geringen negativen Einfluss auf die Leistungsfähigkeit hat. Die verwendete FPGA-Architektur hat hierbei auf beide Größen einen entscheidenden Einfluss.
Zusätzlich wird in Anwendungsgebieten mit Strahlungseinfluss die DPR-Funktionalität in Verfahren zur Abschwächung von durch Strahlung induzierten Fehlern eingesetzt. In der Dissertation wird mit der Readback Scrubbing Unit eine Komponente vorgestellt, welche eine Einbitfehlerkorrektur und Zweibitfehlererkennung im FPGA-Konfigurationsspeicher implementiert. Durch integrierte Fehlerstatistikmechanismen wird eine Analyse des Systems zur Laufzeit realisiert. Zusätzlich ist die Erstellung von Readback Scrubbing Schedules möglich, sodass die Fehlererkennung und -korrektur zum einen autonom und zum anderen zur Laufzeit angepasst werden kann. Zusätzlich wird mit OLT(RE)² (On-Line on-demand Testing approach for permanent Radiation Effects in REconfigurable systems) ein Selbsttest für ein SRAM-basiertes FPGA vorgestellt. Dieser Selbsttest ermöglicht zur Systemlaufzeit eine Überprüfung einer FPGA-Fläche vor der Verwendung auf permanente Fehler in den Verdrahtungsressourcen.</abstract>

<relatedItem type="constituent">
  <location>
    <url displayLabel="diss.pdf">https://pub.uni-bielefeld.de/download/2914625/2914626/diss.pdf</url>
  </location>
  <physicalDescription><internetMediaType>application/pdf</internetMediaType></physicalDescription>
  <accessCondition type="restrictionOnAccess">no</accessCondition>
</relatedItem>
<originInfo><publisher>Universität Bielefeld</publisher><dateIssued encoding="w3cdtf">2017</dateIssued>
</originInfo>
<language><languageTerm authority="iso639-2b" type="code">ger</languageTerm>
</language>



<relatedItem type="host"><identifier type="urn">urn:nbn:de:0070-pub-29146251</identifier>
<part>
</part>
</relatedItem>


<dateOther encoding="w3cdtf" type="defenseDate">2017-09-14</dateOther>
<extension>
<bibliographicCitation>
<apa>Korf, S. (2017).  &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld.</apa>
<harvard1>Korf, S., 2017. &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;, Bielefeld: Universität Bielefeld.</harvard1>
<ieee> S. Korf, &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;,  Bielefeld: Universität Bielefeld, 2017.</ieee>
<default>Korf S (2017) &lt;br /&gt;Bielefeld: Universität Bielefeld.</default>
<mla>Korf, Sebastian. &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld, 2017.</mla>
<frontiers>Korf, S. (2017). Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen. Bielefeld: Universität Bielefeld.</frontiers>
<apa_indent>&lt;div style="text-indent:-25px; padding-left:25px;padding-bottom:0px;"&gt;Korf, S. (2017).  &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld.&lt;/div&gt;</apa_indent>
<wels>Korf, S. (2017): Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen. Bielefeld: Universität Bielefeld.</wels>
<chicago>&lt;div style="text-indent:-25px; padding-left:25px;padding-bottom:0px;"&gt;Korf, Sebastian. 2017. &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld.&lt;/div&gt;</chicago>
<lncs> Korf, S.: Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen. Universität Bielefeld, Bielefeld (2017).</lncs>
<ama>Korf S. &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld; 2017.</ama>
<aps> S.  Korf, Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen, (Universität Bielefeld, Bielefeld, 2017).</aps>
<angewandte-chemie>S.  Korf, &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;, Universität Bielefeld, Bielefeld, &lt;strong&gt;2017&lt;/strong&gt;.</angewandte-chemie>
<bio1>Korf S (2017) &lt;br /&gt;&lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;.&lt;br /&gt;Bielefeld: Universität Bielefeld.</bio1>
<dgps>&lt;div style="text-indent:-25px; padding-left:25px;padding-bottom:0px;"&gt;Korf, S. (2017). &lt;em&gt;Dynamisch partielle Rekonﬁguration in fehlertoleranten FPGA-Systemen&lt;/em&gt;. Bielefeld: Universität Bielefeld.&lt;/div&gt;</dgps>
</bibliographicCitation>
</extension>
<recordInfo><recordIdentifier>2914625</recordIdentifier><recordCreationDate encoding="w3cdtf">2017-10-22T08:04:04Z</recordCreationDate><recordChangeDate encoding="w3cdtf">2018-11-05T15:30:32Z</recordChangeDate>
</recordInfo>
</mods>